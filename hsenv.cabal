Name:                hsenv

Version:             0.4

Synopsis:            Virtual Haskell Environment builder

Description:         hsenv is a tool (inspired by Python's virtualenv) to create isolated Haskell environments.
                     .
                     It creates a sandboxed environment in a .hsenv_<ENVIRONMENT_NAME>/ directory, which, when activated,
                     allows you to use regular Haskell tools (ghc, ghci, ghc-pkg, cabal) to manage your Haskell
                     code and environment. It's possible to create an environment, that uses a different GHC version
                     than your currently installed system GHC. hsenv is supposed to be easier to learn (and use) than
                     similar packages (like cabal-dev or capri).
                     .
                     Basic usage.
                     .
                     First, choose a directory where you want to keep your sandboxed Haskell environment,
                     usually a good choice is a directory containing your cabalized project (if you want to work
                     on a few projects (perhaps an app and its dependent library), just choose any of them,
                     it doesn't really matter). Enter that directory:
                     .
                     > cd ~/projects/foo
                     .
                     Next, create your new isolated Haskell environment (this is a one time only (per environment) step):
                     .
                     > hsenv
                     .
                     Now, every time you want to use this enviroment, you have to activate it:
                     .
                     > source .hsenv_foo/bin/activate
                     .
                     That's it! Now it's possible to use all regular Haskell tools like usual, but it won't affect
                     your global/system's Haskell environment, and also your per-user environment (from ~/.cabal and
                     ~/.ghc) will stay the same. All cabal-installed packages will be private to this environment,
                     and also the external environments (global and user) will not affect it (this environment
                     will only inherit very basic packages - mostly ghc and Cabal and their deps).
                     .
                     When you're done working with this environment, enter command 'deactivate_hsenv',
                     or just close the current shell (with exit).
                     .
                     > deactivate_hsenv
                     .
                     Advanced usage.
                     .
                     The only advanced usage is using different GHC version. This can be useful to test your code
                     against different GHC version (even against nightly builds).
                     .
                     First, download binary distribution of GHC for your platform
                     (e.g. ghc-7.0.4-i386-unknown-linux.tar.bz2), then create a new environment using that GHC
                     .
                     > hsenv --ghc=/path/to/ghc_something.tar.bz2
                     .
                     Then, proceed (with [de]activation) as in basic case.
                     .
                     Misc.
                     .
                     hsenv has been tested on i386 Linux systems, but it should work on any Posix platform.
                     External (from tarball) GHC feature requires binary GHC distribution compiled for your platform,
                     that can be extracted with tar and installed with "./configure --prefix=PATH; make install".
                     .
                     For more info please consult "hsenv --help" or the attached README file.

Homepage:            https://github.com/tmhedberg/hsenv

License:             BSD3

License-file:        LICENSE

Author:              Bartosz Ćwikłowski

Maintainer:          Taylor Hedberg <t@tmh.cc>

Copyright:           (c) 2011 Bartosz Ćwikłowski

Category:            Development

Build-type:          Simple

Stability:           provisional

Bug-reports:         https://github.com/tmhedberg/hsenv/issues

Package-url:         http://hackage.haskell.org/package/hsenv

Tested-with:         GHC == 6.12.3, GHC == 7.0.4, GHC == 7.4.2, GHC == 7.6.1

Data-files:          hsenv.el, README.md

Extra-source-files:  skeletons/activate, skeletons/cabal, skeletons/cabal_config, skeletons/ghc, skeletons/ghc-mod,
                     skeletons/ghc-pkg, skeletons/ghci, skeletons/runghc

Cabal-version:       >=1.6

Executable hsenv

  Main-is: hsenv.hs

  Hs-source-dirs: src

  cpp-options: -Dcabal

  Ghc-options: -threaded -Wall

  Build-depends: base >= 4.2.0.0 && < 4.7
               , process >= 1.0.1.2 && < 1.2
               , filepath >= 1.1.0.3 && < 1.4
               , directory >= 1.0.1.0 && < 1.3
               , Cabal >= 1.8.0.6 && < 1.17
               , mtl >= 1.1.0.2 && < 2.2
               , bytestring >= 0.9.1.7 && < 0.11
               , file-embed >= 0.0.4.1 && < 0.1
               , split >= 0.1.4 && < 0.3
               , safe >= 0.3 && < 0.4
               , unix >= 2.0 && < 2.7

  Other-modules: Util.Cabal
               , Util.Args
               , Util.Args.Args
               , Util.Args.ArgArrow
               , Util.Args.ArgDescr
               , Util.Args.RawArgs
               , Util.Args.GetOpt
               , Util.Args.Usage
               , Util.List
               , Util.StaticArrowT
               , Util.String
               , Util.Template
               , Util.IO
               , Util.WordWrap
               , Skeletons
               , Types
               , HsenvMonad
               , Args
               , Paths
               , SanityCheck
               , Process
               , PackageManagement
               , Actions

Source-repository head
  Type:     git
  Location: git://github.com/tmhedberg/hsenv.git
