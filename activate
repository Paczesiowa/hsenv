if [ -n "${VIRTHUALENV}" ]; then
    if [ "<VIRTHUALENV>" = "${VIRTHUALENV}" ]; then
        echo "${VIRTHUALENV_NAME} Virtual Haskell Environment is already active."
    else
        echo "There is already ${VIRTHUALENV_NAME} Virtual Haskell Environment activated."
        echo "Deactivate it first (using command 'deactivate'), to activate"
        echo "<VIRTHUALENV_NAME> environment."
    fi
    return 1
fi

export VIRTHUALENV="<VIRTHUALENV>"
export VIRTHUALENV_NAME="<VIRTHUALENV_NAME>"

echo "Activating ${VIRTHUALENV_NAME} Virtual Haskell Environment (at ${VIRTHUALENV})."
echo ""
echo "Use regular Haskell tools (ghc, ghci, ghc-pkg, cabal) to manage your Haskell environment."
echo ""
echo "To exit from this virtual environment, enter command 'deactivate'."

for var in PATH PS1; do
    eval echo "export ${var}=\\\"\${${var}}\\\""
done > "${VIRTHUALENV}/.virthualenv/env_backup"

deactivate() {
    echo "Deactivating ${VIRTHUALENV_NAME} Virtual Haskell Environment (at ${VIRTHUALENV})."
    echo "Restoring previous environment settings."

    . "${VIRTHUALENV}/.virthualenv/env_backup"
    rm "${VIRTHUALENV}/.virthualenv/env_backup"

    unset -v VIRTHUALENV
    unset -v VIRTHUALENV_NAME
    unset -v GHC_PACKAGE_PATH
    unset -f deactivate
}

export PATH="${VIRTHUALENV}/.virthualenv/bin:${VIRTHUALENV}/.cabal/bin:${PATH}"
export GHC_PACKAGE_PATH="<GHC_PACKAGE_PATH>"
export PS1="(${VIRTHUALENV_NAME})${PS1}"
