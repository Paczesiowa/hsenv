if [ -n "${HSENV}" ]; then
    if [ "<HSENV>" = "${HSENV}" -a "<HSENV_NAME>" = "${HSENV_NAME}" ]; then
        echo "${HSENV_NAME} Virtual Haskell Environment is already active."
    else
        echo "There is already ${HSENV_NAME} Virtual Haskell Environment activated."
        echo "(at ${HSENV})"
        echo "Deactivate it first (using command 'deactivate_hsenv'), to activate"
        echo "<HSENV_NAME> environment."
    fi
    return 1
fi

export HSENV="<HSENV>"
export HSENV_NAME="<HSENV_NAME>"

echo "Activating ${HSENV_NAME} Virtual Haskell Environment (at ${HSENV})."
echo ""
echo "Use regular Haskell tools (ghc, ghci, ghc-pkg, cabal) to manage your Haskell environment."
echo ""
echo "To exit from this virtual environment, enter command 'deactivate_hsenv'."

export "HSENV_PATH_BACKUP"="${PATH}"
export "HSENV_PS1_BACKUP"="${PS1}"

deactivate_hsenv() {
    echo "Deactivating ${HSENV_NAME} Virtual Haskell Environment (at ${HSENV})."
    echo "Restoring previous environment settings."

    export "PATH"="${HSENV_PATH_BACKUP}"
    unset -v "HSENV_PATH_BACKUP"
    export "PS1"="${HSENV_PS1_BACKUP}"
    unset -v "HSENV_PS1_BACKUP"

    unset -v PACKAGE_DB_FOR_CABAL
    unset -v PACKAGE_DB_FOR_GHC_PKG
    unset -v PACKAGE_DB_FOR_GHC
    unset -v HSENV
    unset -v HSENV_NAME
    unset -v GHC_PACKAGE_PATH
    unset -f deactivate_hsenv

    if [ -n "$BASH" -o -n "$ZSH_VERSION" ]; then
        hash -r
    fi
}

PATH_PREPENDIX="$(cat <HSENV_DIR>/path_var_prependix)"
export PATH="${PATH_PREPENDIX}:${PATH}"
unset -v PATH_PREPENDIX

unset -v PACKAGE_DB_FOR_GHC
ghc --version > /dev/null
if [ "$?" -ne 0 ]; then
    echo "Failed to get ghc version. Deactivating environment..."
    deactivate_hsenv
    exit 1
fi

GHC_VERSION_OUTPUT="$(ghc --version)"
GHC_VERSION_NUMBER="${GHC_VERSION_OUTPUT##* }"

if [ "${GHC_VERSION_NUMBER}" \< "7.6.1" ]; then
    PKG_DB_OPT_SUFFIX="conf"; else
    PKG_DB_OPT_SUFFIX="db"
fi

GHC_PACKAGE_PATH_REPLACEMENT="$(cat <HSENV_DIR>/ghc_package_path_var)"
export PACKAGE_DB_FOR_CABAL=--package-db=`echo "${GHC_PACKAGE_PATH_REPLACEMENT}" | sed s/:/\ --package-db=/`
export PACKAGE_DB_FOR_GHC_PKG=--no-user-package-"${PKG_DB_OPT_SUFFIX}"\ --package-"${PKG_DB_OPT_SUFFIX}"=`echo "${GHC_PACKAGE_PATH_REPLACEMENT}" | sed s/:/\ --package-"${PKG_DB_OPT_SUFFIX}"=/`
export PACKAGE_DB_FOR_GHC=-no-user-package-"${PKG_DB_OPT_SUFFIX}"\ -package-"${PKG_DB_OPT_SUFFIX}"=`echo "${GHC_PACKAGE_PATH_REPLACEMENT}" | sed s/:/\ -package-"${PKG_DB_OPT_SUFFIX}"=/`

export PS1="(${HSENV_NAME})${PS1}"

unset -v GHC_VERSION_OUTPUT
unset -v GHC_VERSION_NUMBER
unset -v PKG_DB_OPT_SUFFIX
unset -v GHC_PACKAGE_PATH_REPLACEMENT

if [ -n "$BASH" -o -n "$ZSH_VERSION" ]; then
    hash -r
fi
